{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/StatisticsItem/StatisticsItem.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","user.png","components/Profile/Profile.js","components/StatisticsItem/StatisticsItem.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistoryItem/TransactionHistoryItem.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","avatar","tag","location","stats","className","css","profile","description","src","alt","label","quantity","followers","views","likes","defaultProps","defaultImg","StatisticsItem","percentage","rndColor","bgColor","i","rnd","Math","random","isTwoSimbols","round","toString","simbols","length","Statistics","title","statistics","statList","map","id","item","style","backgroundColor","FriendListItem","isOnline","status","width","FriendList","friends","friendList","TransactionHistoryItem","type","amount","currency","TransactionHistory","items","transactionHistory","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e4fdf81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3h8Tb\",\"description\":\"Profile_description__1Xmcc\",\"avatar\":\"Profile_avatar__3jLbA\",\"name\":\"Profile_name__MhmZ3\",\"tag\":\"Profile_tag__1qQOx\",\"location\":\"Profile_location__LrlG5\",\"stats\":\"Profile_stats__3cvjn\",\"label\":\"Profile_label__3NuFY\",\"quantity\":\"Profile_quantity__2d9Rv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__FIuFb\",\"title\":\"Statistics_title__1Zcm2\",\"statList\":\"Statistics_statList__1Mag9\",\"item\":\"Statistics_item__1BtjC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"FriendListItem_status__3-dlO\",\"avatar\":\"FriendListItem_avatar__5_JQr\",\"name\":\"FriendListItem_name__3smED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"StatisticsItem_label__13Q1K\",\"percentage\":\"StatisticsItem_percentage__2agcX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1Pl22\",\"item\":\"FriendList_item__379cF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__3aPcu\"};","export default __webpack_public_path__ + \"static/media/user.44ea40a3.png\";","import PropTypes from 'prop-types';\r\nimport css from './Profile.module.css';\r\nimport defaultImg from '../../user.png';\r\n\r\nfunction Profile({\r\n    name,\r\n    avatar,\r\n    tag,\r\n    location,\r\n    stats,\r\n}) {\r\n  return (\r\n    <div className={css.profile}>\r\n      <div className={css.description}>\r\n        <img\r\n          src={avatar}\r\n          alt=\"Аватар пользователя\"\r\n          className={css.avatar}\r\n        />\r\n        <p className={css.name}>{name}</p>\r\n        <p className={css.tag}>@{tag}</p>\r\n        <p className={css.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={css.stats}>\r\n        <li>\r\n          <span className={css.label}>Followers</span>\r\n          <span className={css.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={css.label}>Views</span>\r\n          <span className={css.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={css.label}>Likes</span>\r\n          <span className={css.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n      followers: PropTypes.number.isRequired,\r\n      views: PropTypes.number.isRequired,\r\n      likes: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\nProfile.defaultProps = {\r\n  avatar: defaultImg,\r\n};\r\n\r\nexport default Profile;\r\n","import PropTypes from 'prop-types';\r\nimport css from './StatisticsItem.module.css';\r\n\r\nfunction StatisticsItem({\r\n    label,\r\n    percentage,\r\n}) {\r\n    return (\r\n        <>\r\n            <span className={css.label}>{label}</span>\r\n            <span className={css.percentage}>{percentage}%</span>\r\n        </>\r\n    )\r\n}\r\n\r\nStatisticsItem.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    percentage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default StatisticsItem;","import PropTypes from 'prop-types';\r\nimport StatisticsItem from '../StatisticsItem/StatisticsItem';\r\nimport css from './Statistics.module.css';\r\n\r\nfunction Statistics({\r\n    title,\r\n    stats,\r\n}) {\r\n    return (\r\n        <section className={css.statistics}>\r\n            {title && <h2 className={css.title}>{title}</h2>}\r\n\r\n            <ul className={css.statList}>\r\n                {stats.map(({id, label, percentage}) => (\r\n                    <li key={id} className={css.item} style={{ backgroundColor: rndColor() }}>\r\n                        <StatisticsItem label={label} percentage={percentage}/>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nfunction rndColor() {\r\n    let bgColor = '#';\r\n\r\n    for (let i = 1; i <= 3; i += 1) {\r\n        const rnd = Math.random() * 256;\r\n        const rgb = rnd > 200 ? Math.round(rnd - 56).toString(16) : Math.round(rnd).toString(16);\r\n\r\n        bgColor += isTwoSimbols(rgb);\r\n    }\r\n    return bgColor;\r\n}\r\n\r\nfunction isTwoSimbols(simbols) {\r\n    if (simbols.length !== 2) {\r\n        simbols = '0' + simbols;\r\n    }\r\n\r\n    return simbols;\r\n}\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(\r\n        PropTypes.shape({ id: PropTypes.string.isRequired, })\r\n    ).isRequired,\r\n}\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\nimport css from './FriendListItem.module.css'\r\nimport defaultImg from '../../user.png';\r\n\r\nfunction FriendListItem({\r\n    avatar = defaultImg,\r\n    name,\r\n    isOnline\r\n}) {\r\n    \r\n    return (\r\n        <>\r\n            <span className={css.status} style={{backgroundColor: isOnline ? 'green' : 'red'}}></span>\r\n            <img className={css.avatar} src={avatar} alt={name} width=\"48\" />\r\n            <p className={css.name}>{name}</p>\r\n        </>\r\n    );\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default FriendListItem;\r\n","import PropTypes from 'prop-types';\r\nimport FriendListItem from '../FriendListItem/FriendListItem';\r\nimport css from './FriendList.module.css';\r\n\r\nfunction FriendList({ friends }) {\r\n    return (\r\n        <ul className={css.friendList}>\r\n            {friends.map(({ avatar, name, isOnline, id }) => (\r\n                <li className={css.item} key={id}>\r\n                    <FriendListItem avatar={avatar} name={name} isOnline={isOnline} />\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n        })\r\n    ).isRequired\r\n};\r\n\r\nexport default FriendList;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction TransactionHistoryItem({\r\n    type,\r\n    amount,\r\n    currency\r\n}) {\r\n    return (\r\n        <>\r\n            <td>{type}</td>\r\n            <td>{amount}</td>\r\n            <td>{currency}</td>\r\n        </>\r\n    );\r\n}\r\n \r\nTransactionHistoryItem.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    amount: PropTypes.string.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TransactionHistoryItem;","import PropTypes from 'prop-types';\r\nimport TransactionHistoryItem from '../TransactionHistoryItem/TransactionHistoryItem';\r\nimport css from './TransactionHistory.module.css';\r\n\r\nfunction TransactionHistory({ items }) {\r\n    return (\r\n        <table className={css.transactionHistory}>\r\n            <thead>\r\n                <tr>\r\n                    <th>Type</th>\r\n                    <th>Amount</th>\r\n                    <th>Currency</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {items.map(({id, type, amount, currency}) => (\r\n                    <tr key = {id}>\r\n                        <TransactionHistoryItem type={type} amount={amount} currency={currency}/>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n \r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired\r\n        })\r\n    ).isRequired\r\n};\r\n\r\nexport default TransactionHistory;","//import logo from './logo.svg';\nimport './App.css';\n\nimport user from './data/user.json';\nimport statisticalData from './data/statistical-data.json';\nimport friends from './data/friends.json';\nimport transactions from './data/transactions.json';\n\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nfunction App() {\n  return (\n    <>\n      \n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}